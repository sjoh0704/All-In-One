apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gw-cm
  namespace: {{ .Release.Namespace }}
data:
  api-gw.conf: |

    resolver 10.96.0.10;

    upstream user{
        server user.{{ .Release.Namespace }}.svc.cluster.local:8080;
        keepalive 32;
    }

    upstream product{
        server product.{{ .Release.Namespace }}.svc.cluster.local:8080;
        keepalive 32;
    }
    upstream rating{
        server rating.{{ .Release.Namespace }}.svc.cluster.local:8080;
        keepalive 32;
    }

    upstream cart{
        server cart.{{ .Release.Namespace }}.svc.cluster.local:8080;
        keepalive 32;
    }

    upstream order{
        server order.{{ .Release.Namespace }}.svc.cluster.local:8080;
        keepalive 32;
    }


    server {
      listen 80;
        proxy_http_version 1.1; 
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_set_header Connection ""; 
        add_header X-Request-Id $http_x_request_id;
        add_header X-B3-Traceid $http_x_b3_traceid;
        add_header X-B3-Spanid $http_x_b3_spanid;
        add_header X-B3-Parentspanid $http_x_b3_parentspanid;
        add_header X-B3-Sampled $http_x_b3_sampled;
        add_header X-B3-Flags $http_x_b3_Flags;
        add_header B3 $http_b3;
        add_header X-Ot-Span-Context $http_x_ot_span_context;
      
        location ~ ^/apis/v1/user(.*)$ {
            rewrite ^/apis/v1/user(.*)$ /apis/v1/user$1 break;
            proxy_pass http://user;
        }
        location ~ ^/apis/v1/carts(.*)$ {
            rewrite ^/apis/v1/carts(.*)$ /apis/v1/carts$1 break;
            proxy_pass http://cart;

        }
        location ~ ^/apis/v1/order(.*)$ {
            rewrite ^/apis/v1/order(.*)$ /apis/v1/order$1 break;
            proxy_pass http://order;

        }
        location ~ ^/apis/v1/product(.*)$ {
            rewrite ^/apis/v1/product(.*)$ /apis/v1/product$1 break;
            proxy_pass http://product;

        }

        location ~ ^/apis/v1/category(.*)$ {
            rewrite ^/apis/v1/category(.*)$ /apis/v1/category$1 break;
            proxy_pass http://product;

        }

        location ~ ^/apis/v1/ratings(.*)$ {
            rewrite ^/apis/v1/ratings(.*)$ /apis/v1/ratings$1 break;
            proxy_pass http://rating;

        }
        location /health {
            return 200 "ok";
        }

    }